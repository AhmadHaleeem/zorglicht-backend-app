<!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Custom JavaScript -->
    <script src="/js/main.js?v=<%= new Date().getTime() %>"></script>
    
    <!-- Application Scripts -->
    <script>
        // Flash message handling
        function showFlashMessage(type, message) {
            const flashContainer = document.getElementById('flashMessages');
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.innerHTML = `
                <i class="bi bi-${type === 'success' ? 'check-circle' : 'exclamation-triangle'} me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            flashContainer.appendChild(alertDiv);
            
            // Auto-dismiss after 5 seconds
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    const bsAlert = new bootstrap.Alert(alertDiv);
                    bsAlert.close();
                }
            }, 5000);
        }
        
        // Method override for DELETE requests
        document.addEventListener('DOMContentLoaded', function() {
            // Handle method override forms
            const forms = document.querySelectorAll('form[data-method]');
            forms.forEach(form => {
                const method = form.getAttribute('data-method');
                if (method && method.toUpperCase() !== 'GET' && method.toUpperCase() !== 'POST') {
                    const methodInput = document.createElement('input');
                    methodInput.type = 'hidden';
                    methodInput.name = '_method';
                    methodInput.value = method;
                    form.appendChild(methodInput);
                }
            });
            
            // Initialize tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
            
            // Initialize popovers
            const popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
            popoverTriggerList.map(function (popoverTriggerEl) {
                return new bootstrap.Popover(popoverTriggerEl);
            });
        });
        
        // Sidebar toggle for mobile
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebarMenu');
            const body = document.body;
            
            sidebar.classList.toggle('show');
            body.classList.toggle('sidebar-open');
            
            // Close sidebar when clicking outside
            if (sidebar.classList.contains('show')) {
                document.addEventListener('click', closeSidebarOnOutsideClick);
            } else {
                document.removeEventListener('click', closeSidebarOnOutsideClick);
            }
        }
        
        function closeSidebarOnOutsideClick(event) {
            const sidebar = document.getElementById('sidebarMenu');
            const toggleButton = document.querySelector('.navbar-toggler');
            
            if (!sidebar.contains(event.target) && !toggleButton.contains(event.target)) {
                sidebar.classList.remove('show');
                document.body.classList.remove('sidebar-open');
                document.removeEventListener('click', closeSidebarOnOutsideClick);
            }
        }
        
        // Initialize mobile sidebar functionality
        document.addEventListener('DOMContentLoaded', function() {
            const toggleButton = document.querySelector('.navbar-toggler');
            if (toggleButton) {
                toggleButton.addEventListener('click', toggleSidebar);
            }
        });
        
        // Auto-hide alerts
        setTimeout(() => {
            const alerts = document.querySelectorAll('.alert:not(.alert-permanent)');
            alerts.forEach(alert => {
                if (alert.querySelector('.btn-close')) {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                }
            });
        }, 5000);
        
        // Loading state management
        function showLoading(element) {
            if (element) {
                element.disabled = true;
                const originalText = element.innerHTML;
                element.setAttribute('data-original-text', originalText);
                element.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>Laden...';
            }
        }
        
        function hideLoading(element) {
            if (element) {
                element.disabled = false;
                const originalText = element.getAttribute('data-original-text');
                if (originalText) {
                    element.innerHTML = originalText;
                }
            }
        }
        
        // Form validation helpers
        function validateEmail(email) {
            const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return re.test(email);
        }
        
        function validateDutchPhone(phone) {
            const re = /^(\+31|0)[1-9][0-9]{8}$/;
            return re.test(phone.replace(/\s/g, ''));
        }
        
        // Currency formatting
        function formatCurrency(amount) {
            return new Intl.NumberFormat('nl-NL', {
                style: 'currency',
                currency: 'EUR'
            }).format(amount);
        }
        
        // Date formatting
        function formatDate(dateString) {
            return new Date(dateString).toLocaleDateString('nl-NL');
        }
        
        // File size formatting
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }
    </script>
    
    <!-- Healthcare Theme Enhancements -->
    <script>
        // Add healthcare-specific animations and interactions
        document.addEventListener('DOMContentLoaded', function() {
            // Pulse animation for health-related icons
            const healthIcons = document.querySelectorAll('.bi-heart-pulse, .bi-heart, .bi-activity');
            healthIcons.forEach(icon => {
                icon.style.animation = 'pulse 2s infinite';
            });
            
            // Add hover effects to cards
            const cards = document.querySelectorAll('.card');
            cards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-2px)';
                    this.style.boxShadow = '0 4px 8px rgba(0,0,0,0.1)';
                });
                
                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                    this.style.boxShadow = '';
                });
            });
        });
    </script>
    
    <!-- CSS Animations -->
    <style>
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }
        
        .card {
            transition: all 0.3s ease;
        }
        
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .slide-in {
            animation: slideIn 0.3s ease-out;
        }
        
        @keyframes slideIn {
            from { transform: translateX(-100%); }
            to { transform: translateX(0); }
        }
        
        /* Custom scrollbar for sidebar */
        .sidebar {
            scrollbar-width: thin;
            scrollbar-color: #dee2e6 transparent;
        }
        
        .sidebar::-webkit-scrollbar {
            width: 6px;
        }
        
        .sidebar::-webkit-scrollbar-track {
            background: transparent;
        }
        
        .sidebar::-webkit-scrollbar-thumb {
            background-color: #dee2e6;
            border-radius: 3px;
        }
        
        .sidebar::-webkit-scrollbar-thumb:hover {
            background-color: #adb5bd;
        }
    </style>
</body>
</html>