<%- include('../partials/header') %>

<div class="container-fluid">
    <div class="row">
        <%- include('../partials/sidebar') %>
        
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">
                    <i class="bi bi-cloud-upload me-2"></i>
                    <%= title %>
                </h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <a href="/bestanden" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left me-2"></i>
                        Terug naar Bestanden
                    </a>
                </div>
            </div>
            
            <!-- Flash Messages -->
            <% if (typeof messages !== 'undefined' && messages.error && messages.error.length > 0) { %>
                <% messages.error.forEach(function(msg) { %>
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        <%- msg %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% }); %>
            <% } %>
            
            <% if (typeof messages !== 'undefined' && messages.success && messages.success.length > 0) { %>
                <% messages.success.forEach(function(msg) { %>
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="bi bi-check-circle me-2"></i>
                        <%- msg %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% }); %>
            <% } %>
            
            <div class="row">
                <div class="col-lg-8">
                    <!-- Upload Form -->
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-upload me-2"></i>
                                Bestanden Uploaden
                            </h5>
                        </div>
                        <div class="card-body">
                            <form action="/bestanden/uploaden" method="POST" enctype="multipart/form-data" id="uploadForm">
                                <!-- File Owner Selection -->
                                <div class="mb-3">
                                    <label for="eigenaar" class="form-label">
                                        <i class="bi bi-person me-2"></i>
                                        Eigenaar van Bestanden
                                    </label>
                                    <select class="form-select" id="eigenaar" name="eigenaar" required>
                                        <option value="">Selecteer eigenaar...</option>
                                        <% employees.forEach(employee => { %>
                                            <option value="<%= employee.id %>">
                                                <%= employee.naam %> (<%= employee.email %>)
                                            </option>
                                        <% }); %>
                                    </select>
                                    <div class="form-text">
                                        Selecteer de werknemer die eigenaar wordt van deze bestanden.
                                    </div>
                                </div>
                                
                                <!-- Folder Selection -->
                                <div class="mb-3">
                                    <label for="folder" class="form-label">
                                        <i class="bi bi-folder me-2"></i>
                                        Map
                                    </label>
                                    <div class="input-group">
                                        <select class="form-select" id="folderSelect" name="folder">
                                            <option value="documents">📁 Documenten</option>
                                            <option value="contracts">📄 Contracten</option>
                                            <option value="reports">📊 Rapporten</option>
                                            <option value="images">🖼️ Afbeeldingen</option>
                                            <option value="certificates">🏆 Certificaten</option>
                                            <option value="personal">👤 Persoonlijk</option>
                                            <option value="custom">✏️ Aangepaste map...</option>
                                        </select>
                                        <input type="text" class="form-control" id="customFolder" name="customFolder" 
                                               placeholder="Voer mapnaam in..." style="display: none;">
                                    </div>
                                    <div class="form-text">
                                        Selecteer een bestaande map of maak een nieuwe aan.
                                    </div>
                                </div>
                                
                                <!-- File Upload Area -->
                                <div class="mb-3">
                                    <label for="files" class="form-label">
                                        <i class="bi bi-files me-2"></i>
                                        Bestanden Selecteren
                                    </label>
                                    <div class="upload-area" id="uploadArea">
                                        <div class="upload-content text-center py-5">
                                            <i class="bi bi-cloud-upload display-1 text-muted mb-3"></i>
                                            <h5>Sleep bestanden hierheen of klik om te selecteren</h5>
                                            <p class="text-muted mb-3">
                                Alle bestandstypen worden ondersteund
                            </p>
                            <p class="text-muted small">
                                Maximaal 5 bestanden, elk tot 10MB
                            </p>
                                            <input type="file" class="form-control d-none" id="files" name="files" 
                                                    multiple>
                                            <button type="button" class="btn btn-primary" onclick="document.getElementById('files').click()">
                                                <i class="bi bi-folder2-open me-2"></i>
                                                Bestanden Kiezen
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Selected Files Preview -->
                                <div id="selectedFiles" class="mb-3" style="display: none;">
                                    <h6>Geselecteerde Bestanden:</h6>
                                    <div id="filesList" class="list-group"></div>
                                </div>
                                
                                <!-- Upload Progress -->
                                <div id="uploadProgress" class="mb-3" style="display: none;">
                                    <div class="progress">
                                        <div class="progress-bar progress-bar-striped progress-bar-animated" 
                                             role="progressbar" style="width: 0%"></div>
                                    </div>
                                    <small class="text-muted mt-1 d-block">Bestanden uploaden...</small>
                                </div>
                                
                                <!-- Submit Button -->
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-success btn-lg" id="submitBtn" disabled>
                                        <i class="bi bi-cloud-upload me-2"></i>
                                        Bestanden Uploaden
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-4">
                    <!-- Upload Guidelines -->
                    <div class="card">
                        <div class="card-header">
                            <h6 class="card-title mb-0">
                                <i class="bi bi-info-circle me-2"></i>
                                Upload Richtlijnen
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <h6 class="text-success">
                                    <i class="bi bi-check-circle me-2"></i>
                                    Toegestane Bestandstypen
                                </h6>
                                <ul class="list-unstyled small">
                                    <li><i class="bi bi-file-earmark-pdf text-danger me-2"></i>PDF documenten</li>
                                    <li><i class="bi bi-file-earmark-word text-primary me-2"></i>Word documenten (.doc, .docx)</li>
                                    <li><i class="bi bi-file-earmark-excel text-success me-2"></i>Excel bestanden (.xls, .xlsx)</li>
                                    <li><i class="bi bi-file-earmark-image text-info me-2"></i>Afbeeldingen (.jpg, .png, .gif)</li>
                                    <li><i class="bi bi-file-earmark-text text-secondary me-2"></i>Tekstbestanden (.txt)</li>
                                </ul>
                            </div>
                            
                            <div class="mb-3">
                                <h6 class="text-warning">
                                    <i class="bi bi-exclamation-triangle me-2"></i>
                                    Beperkingen
                                </h6>
                                <ul class="list-unstyled small">
                                    <li>• Maximaal 5 bestanden per upload</li>
                                    <li>• Elk bestand max 10MB</li>
                                    <li>• Alleen toegestane bestandstypen</li>
                                    <li>• Eigenaar moet geselecteerd worden</li>
                                </ul>
                            </div>
                            
                            <div class="mb-3">
                                <h6 class="text-info">
                                    <i class="bi bi-lightbulb me-2"></i>
                                    Tips
                                </h6>
                                <ul class="list-unstyled small">
                                    <li>• Gebruik duidelijke bestandsnamen</li>
                                    <li>• Controleer de eigenaar voor upload</li>
                                    <li>• Bestanden worden veilig opgeslagen</li>
                                    <li>• Eigenaren kunnen hun bestanden bekijken</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Recent Uploads -->
                    <div class="card mt-3">
                        <div class="card-header">
                            <h6 class="card-title mb-0">
                                <i class="bi bi-clock-history me-2"></i>
                                Beveiliging
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="alert alert-info mb-0">
                                <small>
                                    <i class="bi bi-shield-check me-2"></i>
                                    Alle bestanden worden veilig opgeslagen in Cloudinary met 
                                    gecontroleerde toegang. Alleen eigenaren en admins kunnen bestanden bekijken.
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>

<style>
.upload-area {
    border: 2px dashed #dee2e6;
    border-radius: 10px;
    background-color: #f8f9fa;
    transition: all 0.3s ease;
    cursor: pointer;
}

.upload-area:hover {
    border-color: var(--primary-color);
    background-color: #e3f2fd;
}

.upload-area.dragover {
    border-color: var(--primary-color);
    background-color: #e3f2fd;
    transform: scale(1.02);
}

.file-item {
    display: flex;
    align-items: center;
    padding: 10px;
    border-radius: 5px;
    background-color: #f8f9fa;
    margin-bottom: 5px;
}

.file-item .file-info {
    flex-grow: 1;
    margin-left: 10px;
}

.file-item .file-size {
    font-size: 0.8em;
    color: #6c757d;
}

.file-item .remove-file {
    color: #dc3545;
    cursor: pointer;
    padding: 5px;
}

.file-item .remove-file:hover {
    background-color: #dc3545;
    color: white;
    border-radius: 3px;
}
</style>

<script>
const uploadArea = document.getElementById('uploadArea');
const fileInput = document.getElementById('files');
const selectedFilesDiv = document.getElementById('selectedFiles');
const filesListDiv = document.getElementById('filesList');
const submitBtn = document.getElementById('submitBtn');
const eigenaarSelect = document.getElementById('eigenaar');
const uploadForm = document.getElementById('uploadForm');
const uploadProgress = document.getElementById('uploadProgress');
const folderSelect = document.getElementById('folderSelect');
const customFolder = document.getElementById('customFolder');

let selectedFiles = [];

// Handle folder selection
folderSelect.addEventListener('change', function() {
    if (this.value === 'custom') {
        customFolder.style.display = 'block';
        customFolder.required = true;
        customFolder.focus();
    } else {
        customFolder.style.display = 'none';
        customFolder.required = false;
        customFolder.value = '';
    }
});

// Drag and drop functionality
uploadArea.addEventListener('click', () => fileInput.click());

uploadArea.addEventListener('dragover', (e) => {
    e.preventDefault();
    uploadArea.classList.add('dragover');
});

uploadArea.addEventListener('dragleave', () => {
    uploadArea.classList.remove('dragover');
});

uploadArea.addEventListener('drop', (e) => {
    e.preventDefault();
    uploadArea.classList.remove('dragover');
    const files = Array.from(e.dataTransfer.files);
    handleFiles(files);
});

fileInput.addEventListener('change', (e) => {
    const files = Array.from(e.target.files);
    handleFiles(files);
});

function handleFiles(files) {
    // Validate file count
    if (files.length > 5) {
        alert('Je kunt maximaal 5 bestanden tegelijk uploaden.');
        return;
    }
    
    // Validate file sizes only (accept all file types)
    const maxSize = 10 * 1024 * 1024; // 10MB
    
    for (let file of files) {
        if (file.size > maxSize) {
            alert(`Bestand ${file.name} is te groot (max 10MB).`);
            return;
        }
    }
    
    selectedFiles = files;
    
    // Update the actual file input to match selectedFiles
    const dt = new DataTransfer();
    selectedFiles.forEach(file => dt.items.add(file));
    fileInput.files = dt.files;
    
    displaySelectedFiles();
    checkFormValidity();
}

function displaySelectedFiles() {
    if (selectedFiles.length === 0) {
        selectedFilesDiv.style.display = 'none';
        return;
    }
    
    selectedFilesDiv.style.display = 'block';
    filesListDiv.innerHTML = '';
    
    selectedFiles.forEach((file, index) => {
        const fileItem = document.createElement('div');
        fileItem.className = 'list-group-item file-item';
        
        const fileIcon = getFileIcon(file.type);
        const fileSize = (file.size / 1024).toFixed(1) + ' KB';
        
        fileItem.innerHTML = `
            <div class="d-flex align-items-center w-100">
                <i class="${fileIcon} fs-4 me-3"></i>
                <div class="flex-grow-1">
                    <div class="fw-medium">${file.name}</div>
                    <small class="text-muted">${fileSize}</small>
                </div>
                <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeFile(${index})">
                    <i class="bi bi-x"></i>
                </button>
            </div>
        `;
        
        filesListDiv.appendChild(fileItem);
    });
}

function removeFile(index) {
    selectedFiles.splice(index, 1);
    
    // Update file input
    const dt = new DataTransfer();
    selectedFiles.forEach(file => dt.items.add(file));
    fileInput.files = dt.files;
    
    displaySelectedFiles();
    checkFormValidity();
}

function getFileIcon(mimeType) {
    if (mimeType.startsWith('image/')) return 'bi bi-file-earmark-image text-success';
    if (mimeType === 'application/pdf') return 'bi bi-file-earmark-pdf text-danger';
    if (mimeType.includes('excel') || mimeType.includes('spreadsheet')) return 'bi bi-file-earmark-excel text-success';
    if (mimeType.includes('word') || mimeType.includes('document')) return 'bi bi-file-earmark-word text-primary';
    if (mimeType.startsWith('text/')) return 'bi bi-file-earmark-text text-info';
    return 'bi bi-file-earmark text-secondary';
}

function checkFormValidity() {
    const hasFiles = fileInput.files.length > 0;
    const hasOwner = eigenaarSelect.value !== '';
    const isValid = hasFiles && hasOwner;
    
    submitBtn.disabled = !isValid;
    return isValid;
}

eigenaarSelect.addEventListener('change', checkFormValidity);

// Form submission with enhanced progress tracking
uploadForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    console.log('🚀 Form submission started');
    
    // Validate form before submission
    const hasFiles = fileInput.files.length > 0;
    const hasOwner = eigenaarSelect.value !== '';
    
    console.log('📋 Validation check:', { hasFiles, hasOwner, filesCount: fileInput.files.length, owner: eigenaarSelect.value });
    
    if (!hasFiles) {
        console.log('❌ No files selected');
        alert('Selecteer minimaal één bestand om te uploaden.');
        return;
    }
    
    if (!hasOwner) {
        console.log('❌ No owner selected');
        alert('Selecteer een eigenaar voor de bestanden.');
        return;
    }
    
    console.log('✅ Form validation passed, proceeding with upload');
    
    // Clear any previous alerts
    const existingAlerts = document.querySelectorAll('.alert');
    existingAlerts.forEach(alert => {
        if (alert.classList.contains('alert-success') || alert.classList.contains('alert-danger')) {
            alert.remove();
        }
    });
    
    // Show progress with detailed status
    uploadProgress.style.display = 'block';
    submitBtn.disabled = true;
    submitBtn.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>Voorbereiden...';
    
    const progressBar = uploadProgress.querySelector('.progress-bar');
    const progressText = uploadProgress.querySelector('small');
    
    // Progress update function
    const updateProgress = (progress, text, btnText) => {
        progressBar.style.width = progress + '%';
        progressText.textContent = text;
        if (btnText) {
            submitBtn.innerHTML = `<i class="bi bi-hourglass-split me-2"></i>${btnText}`;
        }
    };
    
    try {
        updateProgress(10, 'Bestanden valideren...', 'Valideren...');
        await new Promise(resolve => setTimeout(resolve, 300));
        
        updateProgress(20, 'Verbinding maken met server...', 'Verbinden...');
        await new Promise(resolve => setTimeout(resolve, 200));
        
        const formData = new FormData(this);
        
        console.log('📦 FormData prepared from form with', selectedFiles.length, 'files');
        console.log('👤 Owner selected:', eigenaarSelect.value);
        
        updateProgress(30, 'Uploaden naar Cloudinary...', 'Uploaden...');
        
        console.log('🌐 Sending POST request to /bestanden/uploaden');
        
        const response = await fetch('/bestanden/uploaden', {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest',
                'Accept': 'application/json'
            },
            body: formData
        });
        
        console.log('📡 Response received:', response.status, response.statusText);
        
        updateProgress(90, 'Verwerken van resultaten...', 'Verwerken...');
        
        const result = await response.json();
        
        updateProgress(100, 'Upload voltooid!', 'Voltooid!');
        
        // Hide progress bar after a short delay
        setTimeout(() => {
            uploadProgress.style.display = 'none';
        }, 1000);
        
        if (result.success) {
            const details = result.details;
            let successMessage = `✅ ${details.successCount} van ${details.totalFiles} bestand(en) succesvol geüpload naar Cloudinary!<br>`;
            successMessage += `📁 Cloudinary Status: ${details.cloudinaryStatus}<br>`;
            
            if (details.uploadedFiles && details.uploadedFiles.length > 0) {
                successMessage += `📋 Geüploade bestanden:<br>`;
                details.uploadedFiles.forEach(file => {
                    successMessage += `• ${file.name} (${(file.size / 1024).toFixed(1)} KB) - Eigenaar: ${file.owner}<br>`;
                });
            }
            
            // Show detailed success message
            const successAlert = document.createElement('div');
            successAlert.className = 'alert alert-success alert-dismissible fade show mt-3';
            successAlert.innerHTML = `
                <i class="bi bi-cloud-check me-2"></i>
                <strong>Upload Succesvol!</strong><br>
                ${successMessage}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            uploadProgress.parentNode.insertBefore(successAlert, uploadProgress.nextSibling);
            
            // Reset form
            uploadForm.reset();
            selectedFiles = [];
            displaySelectedFiles();
            
            // Auto-redirect after showing success
            setTimeout(() => {
                window.location.href = '/bestanden';
            }, 3000);
        } else {
            // Handle partial success or complete failure
            const details = result.details;
            let errorMessage = `❌ ${result.error || result.message}<br>`;
            
            if (details) {
                errorMessage += `📊 Resultaat: ${details.successCount}/${details.totalFiles} bestanden succesvol<br>`;
                errorMessage += `☁️ Cloudinary Status: ${details.cloudinaryStatus}<br>`;
                
                if (details.uploadedFiles && details.uploadedFiles.length > 0) {
                    errorMessage += `✅ Succesvol geüpload:<br>`;
                    details.uploadedFiles.forEach(file => {
                        errorMessage += `• ${file.name}<br>`;
                    });
                }
                
                if (details.failedFiles && details.failedFiles.length > 0) {
                    errorMessage += `❌ Mislukte bestanden:<br>`;
                    details.failedFiles.forEach(file => {
                        errorMessage += `• ${file.name}: ${file.error}<br>`;
                    });
                }
            }
            
            // Show detailed error message
            const errorAlert = document.createElement('div');
            errorAlert.className = 'alert alert-danger alert-dismissible fade show mt-3';
            errorAlert.innerHTML = `
                <i class="bi bi-exclamation-triangle me-2"></i>
                <strong>Upload Mislukt!</strong><br>
                ${errorMessage}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            uploadProgress.parentNode.insertBefore(errorAlert, uploadProgress.nextSibling);
            
            // If some files succeeded, offer to redirect
            if (details && details.successCount > 0) {
                setTimeout(() => {
                    if (confirm('Enkele bestanden zijn succesvol geüpload. Wilt u naar de bestandenlijst gaan?')) {
                        window.location.href = '/bestanden';
                    }
                }, 3000);
            }
        }
    } catch (error) {
        console.error('Upload error:', error);
        
        // Reset UI
        uploadProgress.style.display = 'none';
        submitBtn.disabled = false;
        submitBtn.innerHTML = '<i class="bi bi-cloud-upload me-2"></i>Bestanden Uploaden';
        
        let errorMessage = '❌ Er is een netwerkfout opgetreden.<br>';
        errorMessage += '🌐 Controleer je internetverbinding en probeer het opnieuw.<br>';
        errorMessage += '☁️ Cloudinary Status: Verbinding mislukt';
        
        // Show detailed error message with Cloudinary context
        const errorAlert = document.createElement('div');
        errorAlert.className = 'alert alert-danger alert-dismissible fade show mt-3';
        errorAlert.innerHTML = `
            <i class="bi bi-exclamation-triangle me-2"></i>
            <strong>Upload Mislukt!</strong><br>
            ${errorMessage}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        uploadProgress.parentNode.insertBefore(errorAlert, uploadProgress.nextSibling);
        
        // Auto-hide error after 10 seconds
        setTimeout(() => {
            if (errorAlert.parentNode) {
                errorAlert.remove();
            }
        }, 10000);
    }
});
</script>

<%- include('../partials/footer') %>